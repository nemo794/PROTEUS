runconfig:
    name: str()

    groups:
        pge_name_group:
            pge_name: enum('DSWX_HLS_PGE')

        input_file_group:
            # REQUIRED - Single HLS dataset (directory or files)
            input_file_path: list(str(), min=1)
       
        dynamic_ancillary_file_group:
            # Digital elevation model file
            dem_file: str(required=False)

            # Digital elevation model description
            dem_description: str(required=False)

            # Copernicus Global Land Service (CGLS) Land Cover Layer file
            landcover_file: str(required=False)

            # Copernicus Global Land Service (CGLS) Land Cover Layer description
            landcover_description: str(required=False)

            # ESA WorldCover map file
            worldcover_file: str(required=False)

            # ESA WorldCover map description
            worldcover_description: str(required=False)

        primary_executable:
            product_type: enum('DSWX_HLS')
      
        product_path_group:
            # Directory where PGE will place results
            product_path: str()
       
            # Directory where SAS can write temporary data
            scratch_path: str()
       
            # SAS writes DSWx-HLS products as a set of GeoTIFF layers
            # All files are saved within the output_directory following
            # the scheme:
            # {output_dir}/{product_id}_v{product_version}_B{layer_number}_{layer_name}.tif
            # The default value for `product_id` is "dswx_hls".
            # The default value for `product_version` is the PROTEUS software version.
            # `layer_number` and `layer_name` are automatically set by the DSWx-HLS SAS
            # The PGE should update `product_id` and `product_version`
            # according to the DSWx-HLS product specs.

            output_dir: str()
            product_id: str()
            product_version: num(required=False)

        processing:
            # Use terrain-masking based on the Otsu method
            flag_use_otsu_terrain_masking: bool(required=False)

            # Minimum slope angle in degrees for terrain masking
            min_slope_angle: num(min=-180, max=180, required=False)

            # Maximum sun local-incidence angle in degrees for terrain masking
            max_sun_local_inc_angle: num(min=-180, max=180, required=False)

            # Define how areas adjacent to cloud/cloud-shadow should be handled
            mask_adjacent_to_cloud_mode: enum('mask', 'ignore', 'cover', required=False)

            # Layer 1 - WTR
            save_wtr: bool(required=False)

            # Layer 2 - BWTR
            save_bwtr: bool(required=False)

            # Layer 3 - CONF
            save_conf: bool(required=False)

            # Layer 4 - DIAG
            save_diag: bool(required=False)

            # Layer 5 - WTR-1
            save_wtr_1: bool(required=False)

            # Layer 6 - WTR-2
            save_wtr_2: bool(required=False)

            # Layer 7 - LAND
            save_land: bool(required=False)

            # Layer 8 - SHAD
            save_shad: bool(required=False)

            # Layer 9 - CLOUD
            save_cloud: bool(required=False)

            # Layer 10 - DEM
            save_dem: bool(required=False)

            # Reflectance RGB color composition
            save_rgb: bool(required=False)

            # SWIR-1, NIR, and Red reflectance color composition
            save_infrared_rgb: bool(required=False)

        browse_image_group:
            # Save a browse image PNG of the WTR layer.
            save_browse: bool(required=False)

            # Setting `browse_image_height` and `browse_image_width` equal
            # will maintain this original HLS and DSWx-HLS aspect ratio
            # of 3660 pixels x 3660 pixels.
            # If these fields are left empty, 3660 x 3660 will be used.

            # Height in pixels
            browse_image_height: int(min=1, required=False)

            # Width in pixels
            browse_image_width: int(min=1, required=False)

        hls_thresholds: include('hls_thresholds_options', required=False)

---

hls_thresholds_options:

    # Modified Normalized Difference Wetness Index (MNDWI) Threshold
    wigt: num(required=False)

    # Automated Water Extent Shadow Threshold
    awgt: num(required=False)

    # Partial Surface Water Test-1 MNDWI Threshold
    pswt_1_mndwi: num(required=False)

    # Partial Surface Water Test-1 NIR Threshold
    pswt_1_nir: num(required=False)

    # Partial Surface Water Test-1 SWIR1 Threshold
    pswt_1_swir1: num(required=False)

    # Partial Surface Water Test-1 NDVI Threshold
    pswt_1_ndvi: num(required=False)

    # Partial Surface Water Test-2 MNDWI Threshold
    pswt_2_mndwi: num(required=False)

    # Partial Surface Water Test-2 Blue Threshold
    pswt_2_blue: num(required=False)

    # Partial Surface Water Test-2 NIR Threshold
    pswt_2_nir: num(required=False)

    # Partial Surface Water Test-2 SWIR1 Threshold
    pswt_2_swir1: num(required=False)

    # Partial Surface Water Test-2 SWIR2 Threshold
    pswt_2_swir2: num(required=False)

    # Land Cover Mask based test Near Infrared
    lcmask_nir: num(required=False)
